<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Cinema_Management_System.Movie.dao.MovieDao"><!--namespace:定义一个操作包  -->
    <select id="getCount" resultType="int">
        select count(*) from Cinema_movie
        <if test="selType != null and selType !='' and selContent != null and selContent != ''">
            <where>
                <if test="selType == 'movieId'">
                    movie_id = #{selContent}
                </if>
                <if test="selType == 'movieName'">
                    movie_name like CONCAT(CONCAT('%',#{selContent}),'%')
                </if>
            </where>
        </if>
    </select>
<!--查询电影-->
    <select id="selectMovieAll" resultType="com.Cinema_Management_System.Movie.entity.DetailMovie">
        select *
        from Cinema_movie
        <if test="selType != null and selType !='' and selContent != null and selContent != ''">
            <where>
                <if test="selType == 'movieId'">
                    movie_id = #{selContent}
                </if>
                <if test="selType == 'movieName'">
                    movie_name like CONCAT(CONCAT('%',#{selContent}),'%')
                </if>
            </where>
        </if>
        limit #{pageStart},#{pageSize}
    </select>

    <select id="selectMovieByName" resultType="com.Cinema_Management_System.Movie.entity.DetailMovie">
        select *
        from Cinema_movie
        where movie_name = #{movieName}
    </select>

    <select id="selectHitMovie" resultType="com.Cinema_Management_System.Movie.entity.HitMovie">
        SELECT
        m.movie_id,m.movie_name,m.movie_picture,m.movie_score,MIN(a.arrangement_price) lowest_price
        FROM
        Cinema_movie m
        RIGHT JOIN
        Cinema_arrangement a
        ON m.movie_id = a.movie_id
        <where>
            <if test="1==1">
                a.arrangement_time > NOW()
            </if>
        </where>
        GROUP BY m.movie_id,m.movie_name,m.movie_picture
        <if test="selectType == 'byhot' or selectType == 'bywantnum'">
            order by m.wants_num desc
        </if>
        <if test="selectType == 'bytime'">
            order by m.movie_release_time
        </if>
        <if test="selectType == 'byscore'">
            order by m.movie_score desc
        </if>

        limit #{pageStart},#{pageSize}
    </select>

    <select id="getDetailMovie" resultType="com.Cinema_Management_System.Movie.entity.DetailMovie">
        select *
        from Cinema_movie
        where movie_id = #{movieId}
    </select>

    <select id="getRelativeMovie" resultType="com.Cinema_Management_System.Movie.entity.Movie">
        select movie_id,movie_name,movie_picture,movie_score
        from Cinema_movie
        where
        <foreach collection="typeList" item="type" separator="or">
            movie_type like CONCAT(CONCAT('%',#{type}),'%')
        </foreach>
        <foreach collection="actorList" item="actor" separator="or" open="or">
            movie_actor like CONCAT(CONCAT('%',#{actor}),'%')
        </foreach>
        <foreach collection="directorList" item="director" separator="or" open="or">
            movie_type like CONCAT(CONCAT('%',#{director}),'%')
        </foreach>
        limit 0,9
    </select>

    <select id="isWant" resultType="int">
        select count(*)
        from movie_wants
        where customer_id = #{customerId} and movie_id = #{movieId}
    </select>

    <select id="HitMovieCount" resultType="int">
        SELECT COUNT(*)
        FROM (  SELECT
	                m.movie_id,m.movie_name,m.movie_picture,MIN(a.arrangement_price) lowest_price
                FROM
	                Cinema_movie m
                RIGHT JOIN
	                Cinema_arrangement a
                ON m.movie_id = a.movie_id
                where a.arrangement_time > NOW()
                GROUP BY m.movie_id,m.movie_name,m.movie_picture
                ORDER BY m.movie_release_time) as s
    </select>

    <select id="selectUpcomingMovie" resultType="com.Cinema_Management_System.Movie.entity.UpcomingMovie">
        SELECT
        movie_id,movie_name,movie_picture,movie_score,wants_num
        FROM
        Cinema_movie
        where movie_release_time > now()
        <if test="selectType == 'byhot' or selectType == 'bywantnum'">
            order by wants_num desc
        </if>
        <if test="selectType == 'bytime'">
            order by movie_release_time
        </if>
        <if test="selectType == 'byscore'">
            order by movie_score desc
        </if>
        limit #{pageStart},#{pageSize}
    </select>

    <select id="UpcomingMovieCount" resultType="int">
        SELECT
        count(*)
        FROM
        Cinema_movie
        where movie_release_time > now()
        <if test="selectType == 'byhot' or selectType == 'bywantnum'">
            order by wants_num desc
        </if>
        <if test="selectType == 'bytime'">
            order by movie_release_time
        </if>
        <if test="selectType == 'byscore'">
            order by movie_score desc
        </if>
    </select>

    <select id="getMovieId" resultType="int">
        select movie_id
        from Cinema_movie
        where movie_name like concat(concat('%',#{movieName}),'%')
        limit 0,1
    </select>
<!--删除一个电影-->
    <delete id="deleteMovie" parameterType="integer">
        delete from Cinema_movie
        where movie_id = #{movieId}
    </delete>
<!--批量删除电影-->
    <delete id="deleteMovies" parameterType="list">
        delete from Cinema_movie where movie_id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
    </delete>

    <delete id="delWant">
        delete from movie_wants
        where customer_id = #{customerId} and movie_id = #{movieId}
    </delete>
<!--//更新电影-->
    <update id="updateMovie">
        update Cinema_movie
        set movie_name = #{movieName},movie_actor = #{movieActor},movie_des = #{movieDes},
        movie_director = #{movieDirector},movie_picture = #{moviePicture},movie_trailer = #{movieTrailer},movie_release_time = #{movieReleaseTime},
        movie_score = #{movieScore},movie_time = #{movieTime},movie_type = #{movieType},wants_num = #{wantsNum}
        where movie_id = #{movieId}
    </update>

    <insert id="addWant">
        insert into movie_wants(customer_id,movie_id)
        value(#{customerId}, #{movieId})
    </insert>
<!--//插入电影-->
    <insert id="insertMovie" parameterType="com.Cinema_Management_System.Movie.entity.DetailMovie">
        insert into Cinema_movie(movie_name,movie_actor,movie_des,movie_director,movie_picture,movie_trailer,movie_release_time,movie_score,movie_time,movie_type,wants_num)
        value (#{movieName},#{movieActor},#{movieDes},#{movieDirector},#{moviePicture},#{movieTrailer},#{movieReleaseTime},#{movieScore},#{movieTime},#{movieType},#{wantsNum})
    </insert>


    <select id="getRecommendMovie" resultType="com.Cinema_Management_System.Movie.entity.Movie">

        select movie_id,movie_name,movie_picture,movie_score
        from Cinema_movie
        order by movie_score desc
        limit 0,10
    </select>


    <!--查询是否有排场-->
    <select id="selectMovieCountList" resultType="int">
        SELECT COUNT(*) FROM  cinema_arrangement m
        WHERE m.movie_id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
              AND arrangement_time>NOW()
    </select>
<!--查询是否有排场-->
    <select id="selectMovieCountSingle" resultType="int">
        SELECT COUNT(*) FROM  cinema_arrangement m
        WHERE m.movie_id= #{id} AND arrangement_time>NOW()
    </select>
</mapper>